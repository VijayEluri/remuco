<?xml version="1.0"?>
<!-- ====================================================================== 
     May 14, 2006 9:48:00 PM                                                        

     Remuco Client
     A J2ME client for the Remuco system.
                   
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     Building the client:
     ^^^^^^^^^^^^^^^^^^^^
     
     Edit file 'build.properties' as described within that file.

     Run target 'dist.jar'.
     
     This will create a jar and jad file in the directory 'dist/' which can be
     installed on a J2ME capable device.
     
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     Creating a souce package:
     ^^^^^^^^^^^^^^^^^^^^^^^^^^
     
     Run target 'dist'.
     
     The source package will be placed in the directory 'dist'.
                   
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     
     Author(s): Christian Buennig      

     ====================================================================== -->

<project name="Remuco Client" default="clean">
    
    <description>
            A J2ME client for the Remuco system.
    </description>

    <property file="build.properties" />
    
    <property name="midp.ver" value="MIDP-2.0"/>
    <property name="midp.ver.num" value="20"/>
    <property name="cldc.ver" value="CLDC-1.1"/>
    <property name="cldc.ver.num" value="11"/>
    
    <!-- =================== Libraries and Classpath ====================== -->

    <!-- Some libraries we need -->
    <property name="midp.lib" value="${wtk.home}/lib/midpapi${midp.ver.num}.jar"/>
    <property name="cldc.lib" value="${wtk.home}/lib/cldcapi${cldc.ver.num}.jar"/>
    <property name="jsr082.lib" value="${wtk.home}/lib/jsr082.jar"/>

    <!-- Classpath for build (within this Ant script) -->
    <path id="build.cp">
        <fileset file="${midp.lib}" />
        <fileset file="${cldc.lib}" />
        <fileset file="${jsr082.lib}" />
    </path>

    <!-- Classpath for build (when using command line tools)-->
    <property name="build.cp.cmdline"
            value="${midp.lib}${path.separator}${cldc.lib}${path.separator}${jsr082.lib}"/>

    <!-- =================== Midlet Configuration ======================== -->

    <property name="midlet.name" value="Remuco"/>
    <property name="midlet.name.lc" value="remuco"/>
    <property name="midlet.jar" value="${midlet.name.lc}.jar"/>
    <property name="midlet.jad" value="${midlet.name.lc}.jad"/>
    <property name="midlet.class" value="remuco.Remuco"/>
    <property name="midlet.icon" value="logo.png"/>
    <property name="midlet.version" value="0.7.1"/>
    <property name="midlet.vendor" value="remuco.sf.net"/>
    <property name="midlet.data-size" value="2048"/>
    
    <property name="dist.pkg-name.src"
        value="remuco-client-${midlet.version}"/>

    <property name="dist.pkg-name.bin"
        value="remuco-client-${midlet.version}.bin"/>
    
    <!-- =================== We need Linux ================================ -->

    <target name="checkForLinux">
        <fail message="Need a Linux system to build, sorry ..">
            <condition>
                <not>
                    <os name="Linux" />
                </not>
            </condition>
        </fail>            
    </target>
    
    <!-- =================== Build ======================================== -->

    <target name="compile">
        <mkdir dir="build/classes" />
        <javac  destdir="build/classes" 
                target="1.1" source="1.3"
                bootclasspath="${midp.lib}"
                debug="true" verbose="no"
                excludes="${remuco-build-excludes}">
            <!-- sources -->
            <src path="src" />
            <!-- exclude name="remuco/xxx/**"/ -->
            <!-- classpath -->
            <classpath refid="build.cp" />
        </javac>
    </target>

    <!-- - - - - - - - - - - Obfuscation  - - - - - - - - - - - - - - - - - -->

    <target name="obfuscate.proguard">
        <taskdef resource="proguard/ant/task.properties"
                 classpath="${proguard.jar}" />
        <proguard allowaccessmodification="yes"
                overloadaggressively="yes"
                defaultpackage="" 
                usemixedcaseclassnames="no">
            <injar path="build/classes" />
            <outjar path="build/obfuscated"/>
            <libraryjar refid="build.cp"/>
            <keep access="public" extends="javax.microedition.midlet.MIDlet"/>
        </proguard>
    </target>

    <target name="obfuscate.none">
        <copy todir="build/obfuscated">
            <fileset dir="build/classes" />
        </copy>
    </target>

    <target name="obfuscate" depends="compile">
        <mkdir dir="build/obfuscated" />
        <antcall target="obfuscate.${obfuscator}" />
    </target>
    
    <!-- - - - - - - - - - - Preverification  - - - - - - - - - - - - - - - -->

    <target name="preverify" depends="obfuscate">
        <mkdir dir="build/preverified"/>
        <exec executable="${wtk.home}/bin/preverify">
            <arg line="-classpath ${build.cp.cmdline}" />
            <arg line="-d build/preverified" />
            <arg line="build/obfuscated" />
        </exec>
    </target>

    <!-- - - - - - - - - - - Create Jar - - - - - - - - - - - - - - - - - - -->
    
    <target name="jar" depends="preverify,write-metafile">
        <mkdir dir="build/jar"/>
        <copy file="build/MF" tofile="build/jar/MANIFEST.MF" />
        <jar jarfile="build/jar/${midlet.jar}" manifest="build/jar/MANIFEST.MF">
            <fileset dir="build/preverified" />
            <fileset dir="res/" />
        </jar>
    </target>
	
    <!-- Detect which themes are locate in res/themes -->
    <target name="themes.detect" depends="checkForLinux">
        <exec executable="ls" dir="res/themes" outputproperty="_x" >
            <arg line="-1"/>
        </exec>
        <exec executable="sed" inputstring="${_x}" outputproperty="_xx">
            <arg line="-e 's/$/,/'"/>
        </exec>
        <exec executable="tr" inputstring="${_xx}" outputproperty="_xxx">
            <arg line="-d '\n'"/>
        </exec>
        <exec executable="sed" inputstring="${_xxx}" outputproperty="themes">
            <arg line="-e 's/,$//'"/>
        </exec>
        <echo level="info">Themes: ${themes}</echo>
    </target>
    
    <!-- Creates a basic meta file. The jar manifest file and the jad file
         extend this file. -->
    <target name="write-metafile" depends="themes.detect">
        <manifest file="build/MF">
            <attribute name="MicroEdition-Configuration" value="${cldc.ver}" />
            <attribute name="MicroEdition-Profile" value="${midp.ver}" />
            <attribute name="MIDlet-1"
            	value="${midlet.name},${midlet.icon},${midlet.class}"/>
            <attribute name="MIDlet-Name" value="${midlet.name}" />
            <attribute name="MIDlet-Vendor" value="${midlet.vendor}" />
            <attribute name="MIDlet-Version" value="${midlet.version}" />
            <attribute name="MIDlet-Data-Size" value="${midlet.data-size}" />
            <!--attribute name="MIDlet-Permissions" value="javax.microedition.io.Connector.bluetooth.client" / -->
            <attribute name="Remuco-themes" value="${themes}" />
        </manifest>
    </target>
    
    <target name="jar.sign" depends="jar">
            <signjar alias="remuco" storepass="tester" jar="dist/${midlet.jar}" />
    </target>

    
    <!-- =================== Dist ========================================= -->

    <target name="dist.jar" depends="checkForLinux,jar"
            description="--> create a jar and jad deployable on a JME device">
        <mkdir dir="dist"/>
        <copy file="build/MF" tofile="build/${midlet.jad}" />
        <exec executable="stat" outputproperty="midlet.jar.size" os="Linux">
            <arg line="-c %s build/jar/${midlet.jar}" />
        </exec>
        <manifest file="build/${midlet.jad}" mode="update">
            <attribute name="MIDlet-Jar-URL" value="${midlet.jar}"/>
            <attribute name="MIDlet-Jar-Size" value="${midlet.jar.size}"/>
        </manifest>
        <copy todir="dist" file="build/${midlet.jad}" />
        <copy todir="dist" file="build/jar/${midlet.jar}" />
    </target>
    
    <target name="snapshot" depends="clean,emulation.disable,dist.jar"
            description="--> create a binary snapshot of the client">
        <copy todir="snapshot" file="dist/${midlet.jad}" />
        <copy todir="snapshot" file="dist/${midlet.jar}" />
        <tstamp/>
        <echo file="snapshot/README">This is a binary snapshot of the client created on ${TODAY}.</echo>
    </target>
    
    <target name="dist.bin" depends="clean,emulation.disable,dist.jar"
            description="--> create a pkg including all files, which are worth to deploy" >
        
        <!-- create and fill package dir -->
        <mkdir dir="build/dist-bin/${dist.pkg-name.bin}"/>
        <copy todir="build/dist-bin/${dist.pkg-name.bin}">
            <fileset dir="dist">
                <include name="*.jar"/>
                <include name="*.jad"/>
            </fileset>
        </copy>
        <mkdir dir="build/dist-bin/${dist.pkg-name.bin}/doc"/>
        <copy todir="build/dist-bin/${dist.pkg-name.bin}/doc">
            <fileset dir="doc" />
        </copy>
        
        <!-- create the package -->
        <tar destfile="dist/${dist.pkg-name.bin}.tar.gz"
            compression="gzip" basedir="build/dist-bin" />
        
    </target>
    
    
    <target name="dist" depends="clean">
        <mkdir dir="build/dist-src/${dist.pkg-name.src}" />
        <copy todir="build/dist-src/${dist.pkg-name.src}">
            <fileset dir="${basedir}">
                <include name="src/**/*"/>
                <include name="doc/**/*"/>
                <include name="res/**/*"/>
                <include name="build.*"/>
                <include name="profile.*"/>
                <exclude name="**/.*"/> <!-- IDE,CVS,SVN data -->
            </fileset>
        </copy>
        <mkdir dir="dist"/>
        <tar destfile="dist/${dist.pkg-name.src}.tar.gz"
            compression="gzip" basedir="build/dist-src">
        </tar>
    </target>

    <!-- =================== Run ========================================== -->

    <target name="emulation.enable" depends="clean">
        <replace file="src/remuco/Remuco.java" token="EMULATION = false"
                value="EMULATION = true" />            
    </target>
    
    <target name="emulation.disable" depends="clean">
        <replace file="src/remuco/Remuco.java" token="EMULATION = true"
            value="EMULATION = false" />            
    </target>
    
    <target name="run" depends="emulation.enable, dist.jar"
            description="--> run the client in WTK emulation environment">
        <exec executable="${wtk.home}/bin/emulator" dir="dist">
            <arg line="-Xprefs:${basedir}/emulator.properties -Xdomain:${emulation.domain} -Xdevice:${emulation.device} -Xdescriptor:${midlet.jad} " />
        </exec> 
        <antcall target="emulation.disable" />
    </target>
    
    <!-- =================== Misc ========================================= -->

    <target name="clean">
        <delete dir="build" />
        <delete dir="dist" />
        <delete dir="doc.build" />
    </target>

    <target name="install" depends="emulation.disable,dist.jar"
                description="--> copy MIDlet jar to dir">
        <mkdir dir="${install.dest}" />
        <copy todir="${install.dest}" overwrite="true">
            <fileset file="dist/${midlet.jar}" />
            <fileset file="dist/${midlet.jad}" />
        </copy>
    </target>

</project>

