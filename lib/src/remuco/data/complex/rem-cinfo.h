#ifndef REMCINFO_H_
#define REMCINFO_H_

///////////////////////////////////////////////////////////////////////////////
//
// Includes
//
///////////////////////////////////////////////////////////////////////////////

#include <remuco.h>

#include "../../util/rem-util.h"

///////////////////////////////////////////////////////////////////////////////
//
// constants
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
// type definitions
//
///////////////////////////////////////////////////////////////////////////////

typedef struct {
	gint32			mem_limit, img_width, img_height;
	RemStringList	*charsets;
} RemClientInfo;

///////////////////////////////////////////////////////////////////////////////
//
// working with dictionaries
//
///////////////////////////////////////////////////////////////////////////////

RemClientInfo*
rem_client_info_new(void);

void
rem_client_info_destroy(RemClientInfo *ci);

///////////////////////////////////////////////////////////////////////////////
//
// serialization
//
///////////////////////////////////////////////////////////////////////////////

GByteArray*
rem_client_info_serialize(const RemClientInfo *ci,
						  const gchar *se,
						  const RemStringList *pte);

RemClientInfo*
rem_client_info_unserialize(const GByteArray *ba, const gchar *te);

///////////////////////////////////////////////////////////////////////////////
//
// debug
//
///////////////////////////////////////////////////////////////////////////////

void
rem_client_info_dump(const RemClientInfo *ci);

#endif /*REMCINFO_H_*/
