#ifndef REMCINFO_H_
#define REMCINFO_H_

///////////////////////////////////////////////////////////////////////////////
//
// Includes
//
///////////////////////////////////////////////////////////////////////////////

#include "../../util/rem-common.h"

#include "../basic/rem-sv.h"

///////////////////////////////////////////////////////////////////////////////
//
// constants
//
///////////////////////////////////////////////////////////////////////////////

#define REM_DATA_CLI_FEATURE_IMAGES	1

///////////////////////////////////////////////////////////////////////////////
//
// type definitions
//
///////////////////////////////////////////////////////////////////////////////

typedef struct {
	gint32		mem_limit, img_width, img_height;
	rem_sv_t	*encodings;
} rem_cinfo_t;

///////////////////////////////////////////////////////////////////////////////
//
// working with dictionaries
//
///////////////////////////////////////////////////////////////////////////////

rem_cinfo_t*
rem_cinfo_new(void);

void
rem_cinfo_destroy(rem_cinfo_t *ci);

///////////////////////////////////////////////////////////////////////////////
//
// serialization
//
///////////////////////////////////////////////////////////////////////////////

#ifdef REM_NEED_SERIALIZATION_FUNCTIONS

GByteArray*
rem_cinfo_serialize(const rem_cinfo_t *ci, const gchar *se, const rem_sv_t *pte);

rem_cinfo_t*
rem_cinfo_unserialize(const GByteArray *ba, const gchar *te);

#endif

///////////////////////////////////////////////////////////////////////////////
//
// debug
//
///////////////////////////////////////////////////////////////////////////////

void
rem_cinfo_dump(const rem_cinfo_t *ci);

#endif /*REMCINFO_H_*/
