#ifndef REMDATAIV_H_
#define REMDATAIV_H_

///////////////////////////////////////////////////////////////////////////////
//
// Includes
//
///////////////////////////////////////////////////////////////////////////////

#include <remuco.h>
#include "../../util/rem-util.h"

///////////////////////////////////////////////////////////////////////////////
//
// type definitions
//
///////////////////////////////////////////////////////////////////////////////

typedef struct {
	guint l;
	gint32 *v;
} RemIntList;

///////////////////////////////////////////////////////////////////////////////
//
// working with integer vectors
//
///////////////////////////////////////////////////////////////////////////////

RemIntList*
rem_il_new(void);

RemIntList*
rem_il_new_with_values(const gint32 *vals, guint num);

void
rem_il_append(RemIntList *iv, gint32 i);

void
rem_il_clear(RemIntList *iv);

void
rem_il_destroy(RemIntList *iv);

///////////////////////////////////////////////////////////////////////////////
//
// serialization
//
///////////////////////////////////////////////////////////////////////////////

GByteArray*
rem_il_serialize(const RemIntList *iv);

RemIntList*
rem_il_unserialize(const GByteArray *ba);

///////////////////////////////////////////////////////////////////////////////
//
// debug
//
///////////////////////////////////////////////////////////////////////////////

void
rem_il_dump(const RemIntList *iv);

gboolean
rem_il_assert_equals(RemIntList *iv1, RemIntList *iv2);

#endif /*REMDATAIV_H_*/
