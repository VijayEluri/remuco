/* Generated by dbus-binding-tool; do not edit! */


#ifndef __dbus_glib_marshal_rem_server_MARSHAL_H__
#define __dbus_glib_marshal_rem_server_MARSHAL_H__

#include	<glib-object.h>

G_BEGIN_DECLS

#ifdef G_ENABLE_DEBUG
#define g_marshal_value_peek_boolean(v)  g_value_get_boolean (v)
#define g_marshal_value_peek_char(v)     g_value_get_char (v)
#define g_marshal_value_peek_uchar(v)    g_value_get_uchar (v)
#define g_marshal_value_peek_int(v)      g_value_get_int (v)
#define g_marshal_value_peek_uint(v)     g_value_get_uint (v)
#define g_marshal_value_peek_long(v)     g_value_get_long (v)
#define g_marshal_value_peek_ulong(v)    g_value_get_ulong (v)
#define g_marshal_value_peek_int64(v)    g_value_get_int64 (v)
#define g_marshal_value_peek_uint64(v)   g_value_get_uint64 (v)
#define g_marshal_value_peek_enum(v)     g_value_get_enum (v)
#define g_marshal_value_peek_flags(v)    g_value_get_flags (v)
#define g_marshal_value_peek_float(v)    g_value_get_float (v)
#define g_marshal_value_peek_double(v)   g_value_get_double (v)
#define g_marshal_value_peek_string(v)   (char*) g_value_get_string (v)
#define g_marshal_value_peek_param(v)    g_value_get_param (v)
#define g_marshal_value_peek_boxed(v)    g_value_get_boxed (v)
#define g_marshal_value_peek_pointer(v)  g_value_get_pointer (v)
#define g_marshal_value_peek_object(v)   g_value_get_object (v)
#else /* !G_ENABLE_DEBUG */
/* WARNING: This code accesses GValues directly, which is UNSUPPORTED API.
 *          Do not access GValues directly in your code. Instead, use the
 *          g_value_get_*() functions
 */
#define g_marshal_value_peek_boolean(v)  (v)->data[0].v_int
#define g_marshal_value_peek_char(v)     (v)->data[0].v_int
#define g_marshal_value_peek_uchar(v)    (v)->data[0].v_uint
#define g_marshal_value_peek_int(v)      (v)->data[0].v_int
#define g_marshal_value_peek_uint(v)     (v)->data[0].v_uint
#define g_marshal_value_peek_long(v)     (v)->data[0].v_long
#define g_marshal_value_peek_ulong(v)    (v)->data[0].v_ulong
#define g_marshal_value_peek_int64(v)    (v)->data[0].v_int64
#define g_marshal_value_peek_uint64(v)   (v)->data[0].v_uint64
#define g_marshal_value_peek_enum(v)     (v)->data[0].v_long
#define g_marshal_value_peek_flags(v)    (v)->data[0].v_ulong
#define g_marshal_value_peek_float(v)    (v)->data[0].v_float
#define g_marshal_value_peek_double(v)   (v)->data[0].v_double
#define g_marshal_value_peek_string(v)   (v)->data[0].v_pointer
#define g_marshal_value_peek_param(v)    (v)->data[0].v_pointer
#define g_marshal_value_peek_boxed(v)    (v)->data[0].v_pointer
#define g_marshal_value_peek_pointer(v)  (v)->data[0].v_pointer
#define g_marshal_value_peek_object(v)   (v)->data[0].v_pointer
#endif /* !G_ENABLE_DEBUG */


/* BOOLEAN:STRING,STRING,STRING,BOXED,POINTER (/tmp/dbus-binding-tool-c-marshallers.OI20AU:1) */
extern void dbus_glib_marshal_rem_server_BOOLEAN__STRING_STRING_STRING_BOXED_POINTER (GClosure     *closure,
                                                                                      GValue       *return_value,
                                                                                      guint         n_param_values,
                                                                                      const GValue *param_values,
                                                                                      gpointer      invocation_hint,
                                                                                      gpointer      marshal_data);
void
dbus_glib_marshal_rem_server_BOOLEAN__STRING_STRING_STRING_BOXED_POINTER (GClosure     *closure,
                                                                          GValue       *return_value G_GNUC_UNUSED,
                                                                          guint         n_param_values,
                                                                          const GValue *param_values,
                                                                          gpointer      invocation_hint G_GNUC_UNUSED,
                                                                          gpointer      marshal_data)
{
  typedef gboolean (*GMarshalFunc_BOOLEAN__STRING_STRING_STRING_BOXED_POINTER) (gpointer     data1,
                                                                                gpointer     arg_1,
                                                                                gpointer     arg_2,
                                                                                gpointer     arg_3,
                                                                                gpointer     arg_4,
                                                                                gpointer     arg_5,
                                                                                gpointer     data2);
  register GMarshalFunc_BOOLEAN__STRING_STRING_STRING_BOXED_POINTER callback;
  register GCClosure *cc = (GCClosure*) closure;
  register gpointer data1, data2;
  gboolean v_return;

  g_return_if_fail (return_value != NULL);
  g_return_if_fail (n_param_values == 6);

  if (G_CCLOSURE_SWAP_DATA (closure))
    {
      data1 = closure->data;
      data2 = g_value_peek_pointer (param_values + 0);
    }
  else
    {
      data1 = g_value_peek_pointer (param_values + 0);
      data2 = closure->data;
    }
  callback = (GMarshalFunc_BOOLEAN__STRING_STRING_STRING_BOXED_POINTER) (marshal_data ? marshal_data : cc->callback);

  v_return = callback (data1,
                       g_marshal_value_peek_string (param_values + 1),
                       g_marshal_value_peek_string (param_values + 2),
                       g_marshal_value_peek_string (param_values + 3),
                       g_marshal_value_peek_boxed (param_values + 4),
                       g_marshal_value_peek_pointer (param_values + 5),
                       data2);

  g_value_set_boolean (return_value, v_return);
}

/* BOOLEAN:STRING,UINT,UINT,POINTER (/tmp/dbus-binding-tool-c-marshallers.OI20AU:2) */
extern void dbus_glib_marshal_rem_server_BOOLEAN__STRING_UINT_UINT_POINTER (GClosure     *closure,
                                                                            GValue       *return_value,
                                                                            guint         n_param_values,
                                                                            const GValue *param_values,
                                                                            gpointer      invocation_hint,
                                                                            gpointer      marshal_data);
void
dbus_glib_marshal_rem_server_BOOLEAN__STRING_UINT_UINT_POINTER (GClosure     *closure,
                                                                GValue       *return_value G_GNUC_UNUSED,
                                                                guint         n_param_values,
                                                                const GValue *param_values,
                                                                gpointer      invocation_hint G_GNUC_UNUSED,
                                                                gpointer      marshal_data)
{
  typedef gboolean (*GMarshalFunc_BOOLEAN__STRING_UINT_UINT_POINTER) (gpointer     data1,
                                                                      gpointer     arg_1,
                                                                      guint        arg_2,
                                                                      guint        arg_3,
                                                                      gpointer     arg_4,
                                                                      gpointer     data2);
  register GMarshalFunc_BOOLEAN__STRING_UINT_UINT_POINTER callback;
  register GCClosure *cc = (GCClosure*) closure;
  register gpointer data1, data2;
  gboolean v_return;

  g_return_if_fail (return_value != NULL);
  g_return_if_fail (n_param_values == 5);

  if (G_CCLOSURE_SWAP_DATA (closure))
    {
      data1 = closure->data;
      data2 = g_value_peek_pointer (param_values + 0);
    }
  else
    {
      data1 = g_value_peek_pointer (param_values + 0);
      data2 = closure->data;
    }
  callback = (GMarshalFunc_BOOLEAN__STRING_UINT_UINT_POINTER) (marshal_data ? marshal_data : cc->callback);

  v_return = callback (data1,
                       g_marshal_value_peek_string (param_values + 1),
                       g_marshal_value_peek_uint (param_values + 2),
                       g_marshal_value_peek_uint (param_values + 3),
                       g_marshal_value_peek_pointer (param_values + 4),
                       data2);

  g_value_set_boolean (return_value, v_return);
}

/* BOOLEAN:STRING,POINTER (/tmp/dbus-binding-tool-c-marshallers.OI20AU:3) */
extern void dbus_glib_marshal_rem_server_BOOLEAN__STRING_POINTER (GClosure     *closure,
                                                                  GValue       *return_value,
                                                                  guint         n_param_values,
                                                                  const GValue *param_values,
                                                                  gpointer      invocation_hint,
                                                                  gpointer      marshal_data);
void
dbus_glib_marshal_rem_server_BOOLEAN__STRING_POINTER (GClosure     *closure,
                                                      GValue       *return_value G_GNUC_UNUSED,
                                                      guint         n_param_values,
                                                      const GValue *param_values,
                                                      gpointer      invocation_hint G_GNUC_UNUSED,
                                                      gpointer      marshal_data)
{
  typedef gboolean (*GMarshalFunc_BOOLEAN__STRING_POINTER) (gpointer     data1,
                                                            gpointer     arg_1,
                                                            gpointer     arg_2,
                                                            gpointer     data2);
  register GMarshalFunc_BOOLEAN__STRING_POINTER callback;
  register GCClosure *cc = (GCClosure*) closure;
  register gpointer data1, data2;
  gboolean v_return;

  g_return_if_fail (return_value != NULL);
  g_return_if_fail (n_param_values == 3);

  if (G_CCLOSURE_SWAP_DATA (closure))
    {
      data1 = closure->data;
      data2 = g_value_peek_pointer (param_values + 0);
    }
  else
    {
      data1 = g_value_peek_pointer (param_values + 0);
      data2 = closure->data;
    }
  callback = (GMarshalFunc_BOOLEAN__STRING_POINTER) (marshal_data ? marshal_data : cc->callback);

  v_return = callback (data1,
                       g_marshal_value_peek_string (param_values + 1),
                       g_marshal_value_peek_pointer (param_values + 2),
                       data2);

  g_value_set_boolean (return_value, v_return);
}

/* BOOLEAN:STRING,BOXED,BOXED,POINTER (/tmp/dbus-binding-tool-c-marshallers.OI20AU:4) */
extern void dbus_glib_marshal_rem_server_BOOLEAN__STRING_BOXED_BOXED_POINTER (GClosure     *closure,
                                                                              GValue       *return_value,
                                                                              guint         n_param_values,
                                                                              const GValue *param_values,
                                                                              gpointer      invocation_hint,
                                                                              gpointer      marshal_data);
void
dbus_glib_marshal_rem_server_BOOLEAN__STRING_BOXED_BOXED_POINTER (GClosure     *closure,
                                                                  GValue       *return_value G_GNUC_UNUSED,
                                                                  guint         n_param_values,
                                                                  const GValue *param_values,
                                                                  gpointer      invocation_hint G_GNUC_UNUSED,
                                                                  gpointer      marshal_data)
{
  typedef gboolean (*GMarshalFunc_BOOLEAN__STRING_BOXED_BOXED_POINTER) (gpointer     data1,
                                                                        gpointer     arg_1,
                                                                        gpointer     arg_2,
                                                                        gpointer     arg_3,
                                                                        gpointer     arg_4,
                                                                        gpointer     data2);
  register GMarshalFunc_BOOLEAN__STRING_BOXED_BOXED_POINTER callback;
  register GCClosure *cc = (GCClosure*) closure;
  register gpointer data1, data2;
  gboolean v_return;

  g_return_if_fail (return_value != NULL);
  g_return_if_fail (n_param_values == 5);

  if (G_CCLOSURE_SWAP_DATA (closure))
    {
      data1 = closure->data;
      data2 = g_value_peek_pointer (param_values + 0);
    }
  else
    {
      data1 = g_value_peek_pointer (param_values + 0);
      data2 = closure->data;
    }
  callback = (GMarshalFunc_BOOLEAN__STRING_BOXED_BOXED_POINTER) (marshal_data ? marshal_data : cc->callback);

  v_return = callback (data1,
                       g_marshal_value_peek_string (param_values + 1),
                       g_marshal_value_peek_boxed (param_values + 2),
                       g_marshal_value_peek_boxed (param_values + 3),
                       g_marshal_value_peek_pointer (param_values + 4),
                       data2);

  g_value_set_boolean (return_value, v_return);
}

/* BOOLEAN:STRING,UINT,UINT,BOOLEAN,BOOLEAN,UINT,BOOLEAN,POINTER (/tmp/dbus-binding-tool-c-marshallers.OI20AU:5) */
extern void dbus_glib_marshal_rem_server_BOOLEAN__STRING_UINT_UINT_BOOLEAN_BOOLEAN_UINT_BOOLEAN_POINTER (GClosure     *closure,
                                                                                                         GValue       *return_value,
                                                                                                         guint         n_param_values,
                                                                                                         const GValue *param_values,
                                                                                                         gpointer      invocation_hint,
                                                                                                         gpointer      marshal_data);
void
dbus_glib_marshal_rem_server_BOOLEAN__STRING_UINT_UINT_BOOLEAN_BOOLEAN_UINT_BOOLEAN_POINTER (GClosure     *closure,
                                                                                             GValue       *return_value G_GNUC_UNUSED,
                                                                                             guint         n_param_values,
                                                                                             const GValue *param_values,
                                                                                             gpointer      invocation_hint G_GNUC_UNUSED,
                                                                                             gpointer      marshal_data)
{
  typedef gboolean (*GMarshalFunc_BOOLEAN__STRING_UINT_UINT_BOOLEAN_BOOLEAN_UINT_BOOLEAN_POINTER) (gpointer     data1,
                                                                                                   gpointer     arg_1,
                                                                                                   guint        arg_2,
                                                                                                   guint        arg_3,
                                                                                                   gboolean     arg_4,
                                                                                                   gboolean     arg_5,
                                                                                                   guint        arg_6,
                                                                                                   gboolean     arg_7,
                                                                                                   gpointer     arg_8,
                                                                                                   gpointer     data2);
  register GMarshalFunc_BOOLEAN__STRING_UINT_UINT_BOOLEAN_BOOLEAN_UINT_BOOLEAN_POINTER callback;
  register GCClosure *cc = (GCClosure*) closure;
  register gpointer data1, data2;
  gboolean v_return;

  g_return_if_fail (return_value != NULL);
  g_return_if_fail (n_param_values == 9);

  if (G_CCLOSURE_SWAP_DATA (closure))
    {
      data1 = closure->data;
      data2 = g_value_peek_pointer (param_values + 0);
    }
  else
    {
      data1 = g_value_peek_pointer (param_values + 0);
      data2 = closure->data;
    }
  callback = (GMarshalFunc_BOOLEAN__STRING_UINT_UINT_BOOLEAN_BOOLEAN_UINT_BOOLEAN_POINTER) (marshal_data ? marshal_data : cc->callback);

  v_return = callback (data1,
                       g_marshal_value_peek_string (param_values + 1),
                       g_marshal_value_peek_uint (param_values + 2),
                       g_marshal_value_peek_uint (param_values + 3),
                       g_marshal_value_peek_boolean (param_values + 4),
                       g_marshal_value_peek_boolean (param_values + 5),
                       g_marshal_value_peek_uint (param_values + 6),
                       g_marshal_value_peek_boolean (param_values + 7),
                       g_marshal_value_peek_pointer (param_values + 8),
                       data2);

  g_value_set_boolean (return_value, v_return);
}

G_END_DECLS

#endif /* __dbus_glib_marshal_rem_server_MARSHAL_H__ */

#include <dbus/dbus-glib.h>
static const DBusGMethodInfo dbus_glib_rem_server_methods[] = {
  { (GCallback) rem_server_hello, dbus_glib_marshal_rem_server_BOOLEAN__STRING_UINT_UINT_POINTER, 0 },
  { (GCallback) rem_server_update_state, dbus_glib_marshal_rem_server_BOOLEAN__STRING_UINT_UINT_BOOLEAN_BOOLEAN_UINT_BOOLEAN_POINTER, 62 },
  { (GCallback) rem_server_update_plob, dbus_glib_marshal_rem_server_BOOLEAN__STRING_STRING_STRING_BOXED_POINTER, 179 },
  { (GCallback) rem_server_update_playlist, dbus_glib_marshal_rem_server_BOOLEAN__STRING_BOXED_BOXED_POINTER, 253 },
  { (GCallback) rem_server_update_queue, dbus_glib_marshal_rem_server_BOOLEAN__STRING_BOXED_BOXED_POINTER, 323 },
  { (GCallback) rem_server_bye, dbus_glib_marshal_rem_server_BOOLEAN__STRING_POINTER, 390 },
};

const DBusGObjectInfo dbus_glib_rem_server_object_info = {
  0,
  dbus_glib_rem_server_methods,
  6,
"net.sf.remuco.Server\0Hello\0S\0player\0I\0s\0flags\0I\0u\0rating\0I\0u\0\0net.sf.remuco.Server\0UpdateState\0S\0player\0I\0s\0playback\0I\0u\0volume\0I\0u\0repeat\0I\0b\0shuffle\0I\0b\0position\0I\0u\0queue\0I\0b\0\0net.sf.remuco.Server\0UpdatePlob\0S\0player\0I\0s\0id\0I\0s\0img\0I\0s\0meta\0I\0a{ss}\0\0net.sf.remuco.Server\0UpdatePlaylist\0S\0player\0I\0s\0ids\0I\0as\0names\0I\0as\0\0net.sf.remuco.Server\0UpdateQueue\0S\0player\0I\0s\0ids\0I\0as\0names\0I\0as\0\0net.sf.remuco.Server\0Bye\0S\0player\0I\0s\0\0\0",
"\0",
"\0"
};

